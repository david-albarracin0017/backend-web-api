// <auto-generated />
using System;
using MicroService_NaceTuIdea.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MicroService_NaceTuIdea.Migrations
{
    [DbContext(typeof(AppDbcontext))]
    [Migration("20250421231616_Migraions")]
    partial class Migraions
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CategoriaLocalLocal", b =>
                {
                    b.Property<Guid>("Categoriasid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Localesid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Categoriasid", "Localesid");

                    b.HasIndex("Localesid");

                    b.ToTable("LocalCategorias", (string)null);
                });

            modelBuilder.Entity("ComodidadLocalLocal", b =>
                {
                    b.Property<Guid>("Comodidadesid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Localesid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Comodidadesid", "Localesid");

                    b.HasIndex("Localesid");

                    b.ToTable("LocalComodidades", (string)null);
                });

            modelBuilder.Entity("MicroService_NaceTuIdea.Models.AddService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LocalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("LocalId");

                    b.ToTable("AddServices");
                });

            modelBuilder.Entity("MicroService_NaceTuIdea.Models.CategoriaLocal", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("CategoriaLocals");
                });

            modelBuilder.Entity("MicroService_NaceTuIdea.Models.ComodidadLocal", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("ComodidadLocals");
                });

            modelBuilder.Entity("MicroService_NaceTuIdea.Models.DisponibilidadLocal", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LocalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("disponible")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fin")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("horafin")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("horainicio")
                        .HasColumnType("time");

                    b.Property<DateTime>("inicio")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("LocalId");

                    b.ToTable("DisponibilidadLocals");
                });

            modelBuilder.Entity("MicroService_NaceTuIdea.Models.Local", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoriasIds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FotosUrls")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideosUrls")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("capacidad")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("precioxhora")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("propietarioid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("propietarioid");

                    b.ToTable("locals");
                });

            modelBuilder.Entity("MicroService_NaceTuIdea.Models.Notificacion", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("creacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("mensaje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("usuarioid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("vista")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("usuarioid");

                    b.ToTable("Notificacions");
                });

            modelBuilder.Entity("MicroService_NaceTuIdea.Models.ReglaLocal", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LocalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("LocalId");

                    b.ToTable("ReglaLocals");
                });

            modelBuilder.Entity("MicroService_NaceTuIdea.Models.Reserva", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("asistentes")
                        .HasColumnType("int");

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("inicio")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("localid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("precio")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("reserva")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("usuarioid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("localid");

                    b.HasIndex("usuarioid");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("MicroService_NaceTuIdea.Models.Reseña", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("calificacion")
                        .HasColumnType("int");

                    b.Property<string>("comentario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("creacion")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("localid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("respuestaid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("userid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("localid");

                    b.HasIndex("userid");

                    b.ToTable("Reseñas");
                });

            modelBuilder.Entity("MicroService_NaceTuIdea.Models.RespuestaR", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("comentario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("creacion")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("propietarioid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("reseñaid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("propietarioid");

                    b.HasIndex("reseñaid")
                        .IsUnique();

                    b.ToTable("RespuestaRs");
                });

            modelBuilder.Entity("MicroService_NaceTuIdea.Models.Users", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Localid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("propietario")
                        .HasColumnType("bit");

                    b.Property<DateTime>("registro")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("Localid");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CategoriaLocalLocal", b =>
                {
                    b.HasOne("MicroService_NaceTuIdea.Models.CategoriaLocal", null)
                        .WithMany()
                        .HasForeignKey("Categoriasid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MicroService_NaceTuIdea.Models.Local", null)
                        .WithMany()
                        .HasForeignKey("Localesid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ComodidadLocalLocal", b =>
                {
                    b.HasOne("MicroService_NaceTuIdea.Models.ComodidadLocal", null)
                        .WithMany()
                        .HasForeignKey("Comodidadesid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MicroService_NaceTuIdea.Models.Local", null)
                        .WithMany()
                        .HasForeignKey("Localesid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MicroService_NaceTuIdea.Models.AddService", b =>
                {
                    b.HasOne("MicroService_NaceTuIdea.Models.Local", "Local")
                        .WithMany("ServiciosAdicionales")
                        .HasForeignKey("LocalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Local");
                });

            modelBuilder.Entity("MicroService_NaceTuIdea.Models.DisponibilidadLocal", b =>
                {
                    b.HasOne("MicroService_NaceTuIdea.Models.Local", "Local")
                        .WithMany("Disponibilidades")
                        .HasForeignKey("LocalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Local");
                });

            modelBuilder.Entity("MicroService_NaceTuIdea.Models.Local", b =>
                {
                    b.HasOne("MicroService_NaceTuIdea.Models.Users", "Propietario")
                        .WithMany("Locales")
                        .HasForeignKey("propietarioid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Propietario");
                });

            modelBuilder.Entity("MicroService_NaceTuIdea.Models.Notificacion", b =>
                {
                    b.HasOne("MicroService_NaceTuIdea.Models.Users", "Usuario")
                        .WithMany("Notificaciones")
                        .HasForeignKey("usuarioid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("MicroService_NaceTuIdea.Models.ReglaLocal", b =>
                {
                    b.HasOne("MicroService_NaceTuIdea.Models.Local", "Local")
                        .WithMany("Reglas")
                        .HasForeignKey("LocalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Local");
                });

            modelBuilder.Entity("MicroService_NaceTuIdea.Models.Reserva", b =>
                {
                    b.HasOne("MicroService_NaceTuIdea.Models.Local", "Local")
                        .WithMany("Reservas")
                        .HasForeignKey("localid")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MicroService_NaceTuIdea.Models.Users", "Usuario")
                        .WithMany("Reservas")
                        .HasForeignKey("usuarioid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Local");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("MicroService_NaceTuIdea.Models.Reseña", b =>
                {
                    b.HasOne("MicroService_NaceTuIdea.Models.Local", "Local")
                        .WithMany("Reseñas")
                        .HasForeignKey("localid")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MicroService_NaceTuIdea.Models.Users", "Usuario")
                        .WithMany("Reseñas")
                        .HasForeignKey("userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Local");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("MicroService_NaceTuIdea.Models.RespuestaR", b =>
                {
                    b.HasOne("MicroService_NaceTuIdea.Models.Users", "Propietario")
                        .WithMany("Respuestas")
                        .HasForeignKey("propietarioid")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MicroService_NaceTuIdea.Models.Reseña", "Reseña")
                        .WithOne("Respuesta")
                        .HasForeignKey("MicroService_NaceTuIdea.Models.RespuestaR", "reseñaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Propietario");

                    b.Navigation("Reseña");
                });

            modelBuilder.Entity("MicroService_NaceTuIdea.Models.Users", b =>
                {
                    b.HasOne("MicroService_NaceTuIdea.Models.Local", null)
                        .WithMany("UsuariosFavoritos")
                        .HasForeignKey("Localid");
                });

            modelBuilder.Entity("MicroService_NaceTuIdea.Models.Local", b =>
                {
                    b.Navigation("Disponibilidades");

                    b.Navigation("Reglas");

                    b.Navigation("Reservas");

                    b.Navigation("Reseñas");

                    b.Navigation("ServiciosAdicionales");

                    b.Navigation("UsuariosFavoritos");
                });

            modelBuilder.Entity("MicroService_NaceTuIdea.Models.Reseña", b =>
                {
                    b.Navigation("Respuesta")
                        .IsRequired();
                });

            modelBuilder.Entity("MicroService_NaceTuIdea.Models.Users", b =>
                {
                    b.Navigation("Locales");

                    b.Navigation("Notificaciones");

                    b.Navigation("Reservas");

                    b.Navigation("Reseñas");

                    b.Navigation("Respuestas");
                });
#pragma warning restore 612, 618
        }
    }
}
